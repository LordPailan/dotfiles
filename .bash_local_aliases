# vi: ft=sh ts=2 sw=2
# User specific aliases and functions
alias grep='grep --color'
alias borracaca='rm `find . | grep -e \.*~ -e *\.rej -e *\.orig` 2>/dev/null'
alias xtidy='tidy -xml -i -c'

# remove duplicates from input file into stdout
duprm() {
  if [ "$#" -ne 1 ] ; then
    echo -e "Missing input file"
    return 1
  fi
  awk '!x[$0]++' $1
}

lsd() {
  ls -l | awk '/^d/ {print $9}'
}

# git grep is faster than grep itself, it seems....
gg() {
  if [ "$#" -eq 1 ]; then
    git grep -niI "$1" . | grep -iI "$1" --color
  fi
  if [ "$#" -eq 2 ]; then
    git grep -niI "$1" "$2" | grep -iI "$1" --color
  fi
}

# Chorrada
git() {
  case $* in
    blame*)
      command echo "Probablemente tu, as√≠ que mejor no preguntes" ;;
    * )
      command git "$@"
  esac
}

# Thanks: http://stackoverflow.com/questions/10683349/forcing-bash-to-expand-variables-in-a-string-loaded-from-a-file
apply_shell_expansion() {
  declare file="$1"
  declare data=$(< "$file")
  declare delimiter="__apply_shell_expansion_delimiter__"
  declare command="cat <<$delimiter"$'\n'"$data"$'\n'"$delimiter"
  eval "$command"
}

# Get the N% of the files of the input file
get_rand_lines() {

  local in=$1
  local N=$2

  if [ -z "$in" -o ! -f "$in" ] ; then
    echo "[ERROR ] Invalid input file: Syntax is $0 <input_file> [<percentage of lines (Default: 10%)>]"
  else
    [ -z "$N" -o $N -lt 0 -o $N -gt 100 ] && N=10

    while read line ; do
      [ $((RANDOM % 100)) -le $N ] && echo "$line"
    done < $in
  fi
}

# Retruns true iff the current dir (or argument) is a git repository
is_repo() {
  local dir=${1:-.}
  [ -f ${dir}/.git/config ]
}

# Fantastic when you are leaving the company and want to get all your job in one go
alias pull_all='for dir in $(find . -type d) ; do is_repo $dir && (cd $dir && git pull) ; done'
alias clean_all='for dir in $(find . -type d) ; do is_repo $dir && (cd $dir && git clean -f) ; done'

alias cd..='cd ..'
alias myip='dig +short myip.opendns.com @resolver1.opendns.com'
alias gitowners='for branch in `git branch -r | grep -v HEAD`;do echo -e `git show --format="%an ---> %ai %ar" $branch | head -n 1` \\t$branch; done | sort -r'
alias sagi='sudo apt-get install'
alias ls='ls --color'
alias grep='grep --color'
alias iso_to_utf='iconv --from-code=iso-8859-1 --to-code=utf-8'
alias utf_to_iso='iconv --to-code=iso-8859-1 --from-code=utf-8'
alias ccp='xclip -selection clipboard'
alias super.push='git push origin prod  && git push --tags && git push origin develop'

# Spawns a node.js HTTPS server using valid self-signed certificates
alias spawn_server='sudo http-server -p 443 --cors --ssl -a dev.customerscience.net --cert ~/ssl/certificates/dev.customerscience.net.crt --key ~/ssl/private/dev.customerscience.net.key'
