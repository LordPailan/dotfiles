# vi: ft=sh ts=2 sw=2

# Local functions and aliases, loaded on session start.
# By using meaningful one-line comments to functions, they'll get nicely printed
# by means of the 'my_commands' help function (defined in ~/.bashrc)

# Remove duplicated lines from input file into stdout
duprm() {
  if [ "$#" -ne 1 ] ; then
    echo -e "Missing input file"
    return 1
  fi
  awk '!x[$0]++' $1
}

# Allows overriding of GIT commands (try 'git blame ...')
git() {
  case $* in
    blame*)
      command echo "Probablemente tu, as√≠ que mejor no preguntes" ;;
    * )
      command git "$@"
  esac
}

# Thanks: http://stackoverflow.com/questions/10683349/forcing-bash-to-expand-variables-in-a-string-loaded-from-a-file
# Runs all the shell commands written in the given file
apply_shell_expansion() {
  local file="$1"
  [ ! -f $file ] && echo "Not a file: $file." && exit 1

  local data=$(< "$file")
  local delimiter="__apply_shell_expansion_delimiter__"
  local command="cat <<$delimiter"$'\n'"$data"$'\n'"$delimiter"
  eval "$command"
}

# Get the N% of the files of the input file
get_rand_lines() {

  local in=$1
  local N=$2

  if [ -z "$in" -o ! -f "$in" ] ; then
    echo "[ERROR ] Invalid input file: Syntax is $0 <input_file> [<percentage of lines (Default: 10%)>]"
  else
    [ -z "$N" -o $N -lt 0 -o $N -gt 100 ] && N=10

    while read line ; do
      [ $((RANDOM % 100)) -le $N ] && echo "$line"
    done < $in
  fi
}

# Perform a faster, recursive and case-ignoring 'grep' search on a GIT repo.
gg() {
  git grep -iI "$*" | sed -e 's#^\([^:]*\):\(.*\)$#\1 -> \2#g' | grep -iI "$1" --color
}

# Returns true if the current dir (or argument) is a git repository
is_repo() {
  [ -f ${1:-.}/.git/config ]
}

# Typical shortcuts
alias ls='ls --color'
alias grep='grep --color'

# Fantastic when you are leaving the company and want to get all your job in one go
alias pull_all='for dir in $(find . -type d) ; do is_repo $dir && (cd $dir && git pull) ; done || true'
alias clean_all='for dir in $(find . -type d) ; do is_repo $dir && (cd $dir && git clean -f) ; done || true'
alias leaving_today='clean_all && pull_all && tar -cjvf /tmp/leaving_new_york_never_easy.bz2 . && mv /tmp/leaving_new_york_never_easy.bz2 . && printf "\n\nDone\nCopy \"leaving_new_york_never_easy.bz2\" somewhere and RUN. FAST\n\n"'

# so sweet
alias cd..='cd ..'

# Get you external IP fast
alias myip='dig +short myip.opendns.com @resolver1.opendns.com'

# Get the owner of each branch, last commit and branch name
alias gitowners='is_repo && for branch in `git branch -r | grep -v HEAD`;do echo -e `git show --format="%an ---> %ai %ar" $branch | head -n 1` \\t$branch; done | sort -r'

# converters for files
alias iso_to_utf='iconv --from-code=iso-8859-1 --to-code=utf-8'
alias utf_to_iso='iconv --to-code=iso-8859-1 --from-code=utf-8'

# with X only, paste output of command into clipboard: echo 'AAA' | ccp
alias ccp='xclip -selection clipboard'

# Pushes production, develop, and all tags in one go
alias super.push='git push origin prod  && git push --tags && git push origin develop'

# Spawns a node.js HTTPS server using valid self-signed certificates
alias spawn_server='sudo http-server -p 443 --cors --ssl -a dev.localhost.net --cert ~/ssl/certificates/dev.localhost.net.crt --key ~/ssl/private/dev.localhost.net.key'

# list only directories
alias lsd="ls -l | awk '/^d/ {print $9}'"
